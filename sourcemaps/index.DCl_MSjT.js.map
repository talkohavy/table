{"version":3,"file":"index.CGu0W8Lz.js","sources":["../../../src/components/Input/Input.tsx","../../../src/components/Toggle/ToggleMark/ToggleMark.tsx","../../../src/components/Toggle/Toggle.tsx","../../../src/pages/SimpleTablePage/SimpleTablePage.tsx"],"sourcesContent":["import styles from './Input.module.scss';\n\ntype InputProps = {\n  value: string;\n  setValue: (value: any) => void;\n  type?: 'text';\n  placeholder?: React.HTMLInputTypeAttribute;\n  disabled?: boolean;\n};\n\nexport default function Input(props: InputProps) {\n  const { value, setValue, type = 'text', placeholder = '', disabled } = props;\n\n  return (\n    <input\n      type={type}\n      value={value}\n      onChange={(e) => setValue(e.target.value)}\n      placeholder={placeholder}\n      disabled={disabled}\n      className={styles.input}\n    />\n  );\n}\n","import clsx from 'clsx';\nimport styles from './ToggleMark.module.scss';\n\ntype ToggleMarkProps = {\n  isChecked: boolean;\n  className?: string;\n};\n\nexport default function ToggleMark(props: ToggleMarkProps) {\n  const { isChecked, className } = props;\n\n  return (\n    <div\n      className={clsx(styles.toggleMark, isChecked ? styles.toggleMarkChecked : styles.toggleMarkUnchecked, className)}\n    ></div>\n  );\n}\n","import clsx from 'clsx';\nimport styles from './Toggle.module.scss';\nimport ToggleMark from './ToggleMark';\n\ntype ToggleProps = {\n  isChecked: boolean;\n  setIsChecked: (value: any) => void;\n  className?: string;\n  checkmarkClassName?: string;\n};\n\nexport default function Toggle(props: ToggleProps) {\n  const { isChecked, setIsChecked, className, checkmarkClassName } = props;\n\n  return (\n    <div className={clsx(styles.toggle, className)} onClick={setIsChecked}>\n      <ToggleMark isChecked={isChecked} className={checkmarkClassName} />\n    </div>\n  );\n}\n","import { useMemo, useState } from 'react';\nimport clsx from 'clsx';\nimport { createColumnHelper } from '@tanstack/react-table';\nimport { RowSelectionMode } from '../../../lib/components/Table/types.ts';\nimport { Table } from '../../../lib/main';\nimport Input from '../../components/Input';\nimport Toggle from '../../components/Toggle';\nimport { mockData } from '../../mockData';\nimport { useDarkTheme } from '../../providers/DarkThemeProvider/DarkThemeContext.ts';\nimport { THEME } from '../../utils/constants';\nimport styles from './SimpleTablePage.module.scss';\n\nconst columnHelper = createColumnHelper<any>();\n\nconst columnDefsRaw = [\n  columnHelper.accessor('id', { header: 'ID', meta: { addCheckbox: true } }),\n  columnHelper.accessor('first_name', { header: 'First Name' }),\n  columnHelper.accessor('last_name', { header: 'Last Name' }),\n  columnHelper.accessor('email', { header: 'Email' }),\n  columnHelper.accessor('gender', { header: 'Gender' }),\n  columnHelper.accessor('ip_address', { header: 'IP Address' }),\n];\n\nexport default function SimpleTablePage() {\n  const [searchText, setSearchText] = useState<string>('');\n  const { isDarkMode, toggleDarkMode } = useDarkTheme();\n  const [showFooter, setShowFooter] = useState<boolean>(false);\n  const [isFullSize, setIsFullSize] = useState<boolean>(false);\n  const [isSortingEnabled, setIsSortingEnabled] = useState<boolean>(true);\n\n  const handleDarkThemeToggleClick = () => {\n    const [htmlElement] = document.getElementsByTagName('html');\n\n    const nextTheme = isDarkMode ? THEME.Light : THEME.Dark;\n\n    htmlElement.setAttribute('data-theme', nextTheme);\n    toggleDarkMode((isDarkThemeOn: boolean) => !isDarkThemeOn);\n  };\n\n  const columnDefs = useMemo(\n    () => columnDefsRaw.map((column) => ({ ...column, enableSorting: isSortingEnabled })),\n    [isSortingEnabled],\n  );\n\n  return (\n    <div className='flex flex-col justify-start items-start gap-4 size-full p-10'>\n      <div className='border rounded-lg flex w-full'>\n        <div className='flex flex-col justify-between gap-6 items-start p-6'>\n          <div className='flex items-center justify-between gap-4 w-full'>\n            <h2 className='font-medium'>Dark Mode:</h2>\n\n            <Toggle isChecked={isDarkMode} setIsChecked={handleDarkThemeToggleClick} />\n          </div>\n\n          <div className='flex items-center justify-start gap-4 w-full'>\n            <h2 className='font-medium'>Show footer:</h2>\n\n            <Toggle isChecked={showFooter} setIsChecked={() => setShowFooter((prev) => !prev)} />\n          </div>\n        </div>\n\n        <div className='flex flex-col justify-between gap-6 items-start p-6'>\n          <div className='flex items-center justify-between gap-4 w-full'>\n            <h2 className='font-medium'>Sorting Enabled:</h2>\n\n            <Toggle isChecked={isSortingEnabled} setIsChecked={() => setIsSortingEnabled((prev) => !prev)} />\n          </div>\n\n          <div className='flex items-center justify-between gap-4 w-full'>\n            <h2 className='font-medium'>Is Full Size:</h2>\n\n            <Toggle isChecked={isFullSize} setIsChecked={() => setIsFullSize((prev) => !prev)} />\n          </div>\n        </div>\n      </div>\n\n      <Input value={searchText} setValue={setSearchText} placeholder='Search...' />\n\n      <div className='w-full'>\n        <Table\n          data={mockData}\n          columnDefs={columnDefs}\n          rowSelectionMode={RowSelectionMode.Multi}\n          showFooter={showFooter}\n          isFullSize={isFullSize}\n          searchText={searchText}\n          setSearchText={setSearchText}\n          className={clsx('private-table', styles.myTable)}\n          // defaultColumn={{\n          //   enableSorting: isSortingEnabled,\n          //   // enableMultiSort: true,\n          // }}\n          // customTableFooter={TableFooter}\n          // initialPageSize={5}\n          onCellClick={(props: any) => console.log('props is:', props)}\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":["Input","props","value","setValue","type","placeholder","disabled","jsx","e","styles","ToggleMark","isChecked","className","clsx","Toggle","setIsChecked","checkmarkClassName","columnHelper","createColumnHelper","columnDefsRaw","SimpleTablePage","searchText","setSearchText","useState","isDarkMode","toggleDarkMode","useDarkTheme","showFooter","setShowFooter","isFullSize","setIsFullSize","isSortingEnabled","setIsSortingEnabled","handleDarkThemeToggleClick","htmlElement","nextTheme","THEME","isDarkThemeOn","columnDefs","useMemo","column","jsxs","prev","Table","mockData","RowSelectionMode"],"mappings":"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"}